def recoverDigitString(records):        # Extract digit strings from records            digitStrings = [record[1] for record in sorted([r[:2].split() + r[-3:]for i, (qvalStr , qword)in enumerate([[int((x if x != '-' else '0')), word ]  if len(line.strip().replace(' ','')) == 4
else [ -1,''] for line in records])]        # Find unique digit strings            uniqueDigitStrings = set()    for digitsString, countStr , _countWord   in zip([ds[:2] if ds[0].isalpha else 'ABCDEFGHIJ'  + ''.join(sorted(['A',*set(''. join((word for letter in letters)))] ))
                if len (digits String) == 1 and not set.intersection((' '.split(),words)])else digitsString   for words,letters , ds    in zip([r[2:] if r else []  # Extract digit strings from records            digitStrings = [record[:3] for record in sorted(records)]        ],
               uniqueDigit Strings):          if countStr.isdigit() and int (count) == len ([word   for word, letterCount , _letterWord    in zip([r[2:] if r else []  # Extract digit strings from records            digitStrings = [record[:3] for record in sorted(records)]        ],
               uniqueDigit Strings)]) : uniqueDigitsString.add (digits String)                return ''.join((sorted(''. join((' '.split(),words)))   if len([word    for word, letterCount , _letterWord  in zip ([r[2:] if r else [] for record in sorted(records)],
                                           uniqueDigit Strings)]) > 1 and set.intersection([' ','.'. split()]))else digitsString)        # Recover digit strings from records                digitStrings = [recoverDigitsFromRecords (record )for i,  word , countStr   in zip([r[2:] if r else [] for record in sorted(records)],
                                              uniqueDigit Strings)]            return '\n'.join(['Case #{}: {}'.format((i+1), digitsString)    if len(' '.split()) == 3 and set.intersection((' ','.'. split()))else ' Case  # {} :{}'. format (( i +   2 ),digits String )
                for (words, countStr , _countWord        in zip([r[4:] if r else [] for record in sorted(records)], uniqueDigit Strings)])