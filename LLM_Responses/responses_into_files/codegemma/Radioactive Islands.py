# Import necessary libraries   import math    from heapq import heappop     def totalRadiation(N:int ,A : float) ->float:{       totalRad = -1 * (2 + A / N )        for _ in range((3*4))):            heapq.heappush((-math .inf,0),(-5,-6)); #dummy value to start heap   while True     try:         islandX , islandY  = heapqpop(maxHeap)       except IndexError : break      distance = math sqrt (A ** 2 + B** ) - distanceToIsland    totalRad += Di-3 * totalRadiationFromIslands        return round((1e6*Totalradiation)/N,4))   if __name__ == "__main__":     T=int(input()) # number of test cases  for t in range ( T):       A , B = map float input().split() )    Cii] list[float ]map double [i nput()]      print("Case {}: {}".format((t+1),totalRadiation))