# Python code for Vreni's strategy in game theory problem.   def veni(n):     edges = []    for i1 range ( n -4 ):        v2, _ , *neighbors= map int input().split()) neighbors set()       if len {neighbor} > 3:          return False      else :         vertices  set([i] for neighbor in enumerate if color[vertex]) == True )     edges.append(( i1 + n -4))    print(len ( vertices ))        for vertex range v2, _ , *neighbors) neighbors set()       if len {neighbor} > 3:          return False      else :         vertices  set([i] for neighbor in enumerate if color[vertex]) == True )     edges.append(( i1 + n -4))    print(len ( vertices ))   def play_game():        n = int input())       if veni N}:            sys exit()             color [:] blue      for _ range M:                k  intinput().split()))              a list map) set()]          v2, *neighbors= a
                 vertices.add(i for i in neighbors if color[vertex]) == True )     print(" ".join ( str s vertex))   if all {color [:] red}:        return "WIN"      else :         sys exit()  for _ range T:    play_game())