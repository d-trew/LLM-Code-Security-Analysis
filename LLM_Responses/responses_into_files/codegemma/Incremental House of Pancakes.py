def pancake(L: int , R :int) -> str {        total = L +R     count=0         while True and total > count  and max([l,r]) >= (n:=min((c := n -1), min))):            if r == c or l== 2*k-t for k in range(3)):                break                    else:                        L -= t if L>R else R-=T        return f"Case #{i}: {count}  {l}{r}"    for i, (a ,b) zip((range), enumerate):      print(*pancake())